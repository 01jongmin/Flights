{"version":3,"sources":["components/MenuBar.js","fetcher.js","pages/HomePage.js","pages/PlayersPage.js","pages/MatchesPage.js","index.js"],"names":["MenuBar","type","theme","expand","href","navbar","active","React","Component","getAllMatches","page","pagesize","league","a","getAllPlayers","Column","Table","ColumnGroup","Option","Select","playerColumns","title","dataIndex","key","sorter","b","Name","localeCompare","render","text","row","PlayerId","Nationality","Rating","Potential","Club","HomePage","props","state","matchesResults","matchesPageNumber","matchesPageSize","playersResults","pagination","leagueOnChange","bind","goToMatch","matchId","window","location","value","then","res","setState","results","style","width","margin","marginTop","dataSource","this","columns","pageSizeOptions","defaultPageSize","showQuickJumper","defaultValue","onChange","onRow","record","rowIndex","onClick","event","MatchId","Home","Away","HomeGoals","AwayGoals","PlayersPage","format","MatchesPage","ReactDOM","exact","path","document","getElementById"],"mappings":"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","file":"static/js/main.268b1011.chunk.js","sourcesContent":["import React from 'react';\r\nimport {\r\n    Navbar,\r\n    NavbarBrand,\r\n    Nav,\r\n    NavItem,\r\n    NavLink\r\n  } from \"shards-react\";\r\n\r\nclass MenuBar extends React.Component {\r\n    render() {\r\n        return(\r\n            <Navbar type=\"dark\" theme=\"primary\" expand=\"md\">\r\n        <NavbarBrand href=\"/\">CIS 550 FIFA</NavbarBrand>\r\n          <Nav navbar>\r\n          <NavItem>\r\n              <NavLink active href=\"/\">\r\n                Home\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink active href=\"/players\">\r\n                Players\r\n              </NavLink>\r\n            </NavItem>\r\n            <NavItem>\r\n              <NavLink active  href=\"/matches\" >\r\n                Matches\r\n              </NavLink>\r\n            </NavItem>\r\n          </Nav>\r\n      </Navbar>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MenuBar\r\n","import config from \"./config.json\";\r\n\r\nconst getAllMatches = async (page, pagesize, league) => {\r\n  //var res = await fetch(\r\n  //`http://${config.server_host}:${config.server_port}/matches/${league}?page=${page}&pagesize=${pagesize}`,\r\n  //{\r\n  //method: \"GET\",\r\n  //}\r\n  //);\r\n  return {};\r\n};\r\n\r\nconst getAllPlayers = async (page, pagesize) => {\r\n  return {};\r\n};\r\n\r\nconst getMatch = async (id) => {\r\n  return {};\r\n};\r\n\r\nconst getPlayer = async (id) => {\r\n  return {};\r\n};\r\n\r\nconst getMatchSearch = async (home, away, page, pagesize) => {\r\n  return {};\r\n};\r\n\r\nconst getPlayerSearch = async (\r\n  name,\r\n  nationality,\r\n  club,\r\n  rating_high,\r\n  rating_low,\r\n  pot_high,\r\n  pot_low,\r\n  page,\r\n  pagesize\r\n) => {\r\n  return {};\r\n};\r\n\r\nexport {\r\n  getAllMatches,\r\n  getAllPlayers,\r\n  getMatch,\r\n  getPlayer,\r\n  getMatchSearch,\r\n  getPlayerSearch,\r\n};\r\n","import React from \"react\";\nimport { Table, Select } from \"antd\";\n\nimport MenuBar from \"../components/MenuBar\";\nimport { getAllMatches, getAllPlayers } from \"../fetcher\";\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\n\nconst playerColumns = [\n\t{\n\t\ttitle: \"Name\",\n\t\tdataIndex: \"Name\",\n\t\tkey: \"Name\",\n\t\tsorter: (a, b) => a.Name.localeCompare(b.Name),\n\t\trender: (text, row) => <a href={`/players?id=${row.PlayerId}`}>{text}</a>,\n\t},\n\t{\n\t\ttitle: \"Nationality\",\n\t\tdataIndex: \"Nationality\",\n\t\tkey: \"Nationality\",\n\t\tsorter: (a, b) => a.Nationality.localeCompare(b.Nationality),\n\t},\n\t{\n\t\ttitle: \"Rating\",\n\t\tdataIndex: \"Rating\",\n\t\tkey: \"Rating\",\n\t\tsorter: (a, b) => a.Rating - b.Rating,\n\t},\n\t// TASK 7: add a column for Potential, with the ability to (numerically) sort ,\n\t{\n\t\ttitle: \"Potential\",\n\t\tdataIndex: \"Potential\",\n\t\tkey: \"Potential\",\n\t\tsorter: (a, b) => a.Potential - b.Potential,\n\t},\n\t// TASK 8: add a column for Club, with the ability to (alphabetically) sort\n\t{\n\t\ttitle: \"Club\",\n\t\tdataIndex: \"Club\",\n\t\tkey: \"Club\",\n\t\tsorter: (a, b) => a.Club.localeCompare(b.Club),\n\t},\n\t// TASK 9: add a column for Value - no sorting required\n\t{\n\t\ttitle: \"Value\",\n\t\tdataIndex: \"Value\",\n\t\tkey: \"Value\",\n\t},\n];\n\nclass HomePage extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tmatchesResults: [],\n\t\t\tmatchesPageNumber: 1,\n\t\t\tmatchesPageSize: 10,\n\t\t\tplayersResults: [],\n\t\t\tpagination: null,\n\t\t};\n\n\t\tthis.leagueOnChange = this.leagueOnChange.bind(this);\n\t\tthis.goToMatch = this.goToMatch.bind(this);\n\t}\n\n\tgoToMatch(matchId) {\n\t\twindow.location = `/matches?id=${matchId}`;\n\t}\n\n\tleagueOnChange(value) {\n\t\t// TASK 2: this value should be used as a parameter to call getAllMatches in fetcher.js with the parameters page and pageSize set to null\n\t\t// then, matchesResults in state should be set to the results returned - see a similar function call in componentDidMount()\n\t\tgetAllMatches(null, null, value).then((res) => {\n\t\t\tthis.setState({ matchesResults: res.results });\n\t\t});\n\t}\n\n\tcomponentDidMount() {\n\t\tgetAllMatches(null, null, \"D1\").then((res) => {\n\t\t\tthis.setState({ matchesResults: res.results });\n\t\t});\n\n\t\tgetAllPlayers().then((res) => {\n\t\t\t// TASK 1: set the correct state attribute to res.results\n\t\t\tthis.setState({ playersResults: res.results });\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<MenuBar />\n\t\t\t\t<div style={{ width: \"70vw\", margin: \"0 auto\", marginTop: \"5vh\" }}>\n\t\t\t\t\t<h3>Players</h3>\n\t\t\t\t\t<Table\n\t\t\t\t\t\tdataSource={this.state.playersResults}\n\t\t\t\t\t\tcolumns={playerColumns}\n\t\t\t\t\t\tpagination={{\n\t\t\t\t\t\t\tpageSizeOptions: [5, 10],\n\t\t\t\t\t\t\tdefaultPageSize: 5,\n\t\t\t\t\t\t\tshowQuickJumper: true,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div style={{ width: \"70vw\", margin: \"0 auto\", marginTop: \"2vh\" }}>\n\t\t\t\t\t<h3>Matches</h3>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tdefaultValue=\"D1\"\n\t\t\t\t\t\tstyle={{ width: 120 }}\n\t\t\t\t\t\tonChange={this.leagueOnChange}\n\t\t\t\t\t>\n\t\t\t\t\t\t{/* TASK 3: Take a look at Dataset Information.md from MS1 and add other options to the selector here  */}\n\t\t\t\t\t\t<Option value=\"D1\">Bundesliga</Option>\n\t\t\t\t\t\t<Option value=\"SP1\">La Liga</Option>\n\t\t\t\t\t\t<Option value=\"F1\">Ligue 1</Option>\n\t\t\t\t\t\t<Option value=\"I1\">Serie A</Option>\n\t\t\t\t\t\t<Option value=\"E0\">Premier League</Option>\n\t\t\t\t\t</Select>\n\n\t\t\t\t\t<Table\n\t\t\t\t\t\tonRow={(record, rowIndex) => {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tonClick: (event) => {\n\t\t\t\t\t\t\t\t\tthis.goToMatch(record.MatchId);\n\t\t\t\t\t\t\t\t}, // clicking a row takes the user to a detailed view of the match in the /matches page using the MatchId parameter\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdataSource={this.state.matchesResults}\n\t\t\t\t\t\tpagination={{\n\t\t\t\t\t\t\tpageSizeOptions: [5, 10],\n\t\t\t\t\t\t\tdefaultPageSize: 5,\n\t\t\t\t\t\t\tshowQuickJumper: true,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ColumnGroup title=\"Teams\">\n\t\t\t\t\t\t\t{/* TASK 4: correct the title for the 'Home' column and add a similar column for 'Away' team in this ColumnGroup */}\n\t\t\t\t\t\t\t<Column\n\t\t\t\t\t\t\t\ttitle=\"Home\"\n\t\t\t\t\t\t\t\tdataIndex=\"Home\"\n\t\t\t\t\t\t\t\tkey=\"Home\"\n\t\t\t\t\t\t\t\tsorter={(a, b) => a.Home.localeCompare(b.Home)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Column\n\t\t\t\t\t\t\t\ttitle=\"Away\"\n\t\t\t\t\t\t\t\tdataIndex=\"Away\"\n\t\t\t\t\t\t\t\tkey=\"Away\"\n\t\t\t\t\t\t\t\tsorter={(a, b) => a.Away.localeCompare(b.Away)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ColumnGroup>\n\t\t\t\t\t\t<ColumnGroup title=\"Goal\">\n\t\t\t\t\t\t\t{/* TASK 5: add columns for home and away goals in this ColumnGroup, with the ability to sort values in these columns numerically */}\n\t\t\t\t\t\t\t<Column\n\t\t\t\t\t\t\t\ttitle=\"Home Goals\"\n\t\t\t\t\t\t\t\tdataIndex=\"HomeGoals\"\n\t\t\t\t\t\t\t\tkey=\"HomeGoals\"\n\t\t\t\t\t\t\t\tsorter={(a, b) => a.HomeGoals - b.HomeGoals}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Column\n\t\t\t\t\t\t\t\ttitle=\"Away Goals\"\n\t\t\t\t\t\t\t\tdataIndex=\"AwayGoals\"\n\t\t\t\t\t\t\t\tkey=\"AwayGoals\"\n\t\t\t\t\t\t\t\tsorter={(a, b) => a.AwayGoals - b.AwayGoals}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ColumnGroup>\n\t\t\t\t\t\t{/* TASK 6: create two columns (independent - not in a column group) for the date and time. Do not add a sorting functionality */}\n\t\t\t\t\t\t<Column title=\"Date\" dataIndex=\"Date\" key=\"Date\" />\n\t\t\t\t\t\t<Column title=\"Time\" dataIndex=\"Time\" key=\"Time\" />\n\t\t\t\t\t</Table>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default HomePage;\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  FormInput,\r\n  FormGroup,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Progress,\r\n} from \"shards-react\";\r\n\r\nimport {\r\n  Table,\r\n  Pagination,\r\n  Select,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Slider,\r\n  Rate,\r\n} from \"antd\";\r\nimport { RadarChart } from \"react-vis\";\r\nimport { format } from \"d3-format\";\r\n\r\nimport MenuBar from \"../components/MenuBar\";\r\nimport { getPlayerSearch, getPlayer } from \"../fetcher\";\r\nconst wideFormat = format(\".3r\");\r\n\r\nclass PlayersPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1> Player </h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayersPage;\r\n","import React from \"react\";\r\nimport {\r\n\tForm,\r\n\tFormInput,\r\n\tFormGroup,\r\n\tButton,\r\n\tCard,\r\n\tCardBody,\r\n\tCardTitle,\r\n\tProgress,\r\n} from \"shards-react\";\r\n\r\nimport { Table, Row, Col, Divider } from \"antd\";\r\n\r\nimport { getMatchSearch, getMatch } from \"../fetcher\";\r\n\r\nimport MenuBar from \"../components/MenuBar\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\nclass MatchesPage extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n        <h1> Match </h1>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default MatchesPage;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport HomePage from \"./pages/HomePage\";\nimport PlayersPage from \"./pages/PlayersPage\";\nimport \"antd/dist/antd.css\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\";\nimport MatchesPage from \"./pages/MatchesPage\";\n\nReactDOM.render(\n  <div>\n    <Router>\n      <Switch>\n        <Route exact path=\"/Flights/\" render={() => <HomePage />} />\n        <Route exact path=\"/Flights/players\" render={() => <PlayersPage />} />\n        <Route exact path=\"/Flights/matches\" render={() => <MatchesPage />} />\n      </Switch>\n    </Router>\n  </div>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}