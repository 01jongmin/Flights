{"version":3,"sources":["components/MenuBar.js","fetcher.js","pages/HomePage.js","pages/PlayersPage.js","pages/MatchesPage.js","About.jsx","App.js","index.js"],"names":["MenuBar","type","theme","expand","href","navbar","active","React","Component","getAlliances","a","fetch","method","res","json","Column","Table","ColumnGroup","Option","Select","allianceColumns","title","dataIndex","key","sorter","b","Name","localeCompare","HomePage","props","state","alliances","matchesResults","matchesPageNumber","matchesPageSize","playersResults","pagination","leagueOnChange","bind","goToMatch","matchId","window","location","value","then","setState","style","width","margin","marginTop","dataSource","this","columns","pageSizeOptions","defaultPageSize","showQuickJumper","defaultValue","onChange","onRow","record","rowIndex","onClick","event","MatchId","Home","Away","HomeGoals","AwayGoals","PlayersPage","format","divStyle","color","App","className","exact","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7a40ee42.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Navbar, NavbarBrand, Nav, NavItem, NavLink } from \"shards-react\";\r\n\r\nclass MenuBar extends React.Component {\r\n  render() {\r\n    return (\r\n      <Navbar type=\"dark\" theme=\"primary\" expand=\"md\">\r\n        <NavbarBrand href=\"/\">CIS 550 FIFA</NavbarBrand>\r\n        <Nav navbar>\r\n          <NavItem>\r\n            <NavLink active href=\"/\">\r\n              Home\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink active href=\"/players\">\r\n              Players\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink active href=\"/matches\">\r\n              Matches\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n      </Navbar>\r\n    );\r\n  }\r\n}\r\n\r\nexport default MenuBar;\r\n","import config from \"./config.json\";\r\n\r\nconst getAlliances = async () => {\r\n  var res = await fetch(`https://api.flights-550.net/alliances/`, {\r\n    method: \"GET\",\r\n  });\r\n  return res.json();\r\n};\r\n\r\nconst getAllMatches = async (page, pagesize, league) => {\r\n  //var res = await fetch(\r\n  //`http://${config.server_host}:${config.server_port}/matches/${league}?page=${page}&pagesize=${pagesize}`,\r\n  //{\r\n  //method: \"GET\",\r\n  //}\r\n  //);\r\n  return {};\r\n};\r\n\r\nconst getAllPlayers = async (page, pagesize) => {\r\n  return {};\r\n};\r\n\r\nconst getMatch = async (id) => {\r\n  return {};\r\n};\r\n\r\nconst getPlayer = async (id) => {\r\n  return {};\r\n};\r\n\r\nconst getMatchSearch = async (home, away, page, pagesize) => {\r\n  return {};\r\n};\r\n\r\nconst getPlayerSearch = async (\r\n  name,\r\n  nationality,\r\n  club,\r\n  rating_high,\r\n  rating_low,\r\n  pot_high,\r\n  pot_low,\r\n  page,\r\n  pagesize\r\n) => {\r\n  return {};\r\n};\r\n\r\nexport { getAlliances };\r\n","import React from \"react\";\nimport { Table, Select } from \"antd\";\n\nimport MenuBar from \"../components/MenuBar\";\nimport { getAlliances } from \"../fetcher\";\nconst { Column, ColumnGroup } = Table;\nconst { Option } = Select;\n\nconst allianceColumns = [\n\t{\n\t\ttitle: \"id\",\n\t\tdataIndex: \"id\",\n\t\tkey: \"id\",\n\t},\n\t{\n\t\ttitle: \"Name\",\n\t\tdataIndex: \"name\",\n\t\tkey: \"Name\",\n\t\tsorter: (a, b) => a.Name.localeCompare(b.Name),\n\t},\n\t{\n\t\ttitle: \"Image\",\n\t\tdataIndex: \"image\",\n\t\tkey: \"Image\",\n\t},\n];\n\nclass HomePage extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\talliances: [],\n\t\t\tmatchesResults: [],\n\t\t\tmatchesPageNumber: 1,\n\t\t\tmatchesPageSize: 10,\n\t\t\tplayersResults: [],\n\t\t\tpagination: null,\n\t\t};\n\n\t\tthis.leagueOnChange = this.leagueOnChange.bind(this);\n\t\tthis.goToMatch = this.goToMatch.bind(this);\n\t}\n\n\tgoToMatch(matchId) {\n\t\twindow.location = `/matches?id=${matchId}`;\n\t}\n\n\tleagueOnChange(value) {\n\t\t// TASK 2: this value should be used as a parameter to call getAllMatches in fetcher.js with the parameters page and pageSize set to null\n\t\t// then, matchesResults in state should be set to the results returned - see a similar function call in componentDidMount()\n\t\tgetAlliances().then((res) => {\n\t\t\tthis.setState({ alliances: res });\n\t\t});\n\t}\n\n\tcomponentDidMount() {\n\t\tgetAlliances().then((res) => {\n\t\t\tthis.setState({ alliances: res });\n\t\t});\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<MenuBar />\n\t\t\t\t<div style={{ width: \"70vw\", margin: \"0 auto\", marginTop: \"5vh\" }}>\n\t\t\t\t\t<h3>Alliances</h3>\n\t\t\t\t\t<Table\n\t\t\t\t\t\tdataSource={this.state.alliances}\n\t\t\t\t\t\tcolumns={allianceColumns}\n\t\t\t\t\t\tpagination={{\n\t\t\t\t\t\t\tpageSizeOptions: [5, 10],\n\t\t\t\t\t\t\tdefaultPageSize: 5,\n\t\t\t\t\t\t\tshowQuickJumper: true,\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<div style={{ width: \"70vw\", margin: \"0 auto\", marginTop: \"2vh\" }}>\n\t\t\t\t\t<h3>Matches</h3>\n\t\t\t\t\t<Select\n\t\t\t\t\t\tdefaultValue=\"D1\"\n\t\t\t\t\t\tstyle={{ width: 120 }}\n\t\t\t\t\t\tonChange={this.leagueOnChange}\n\t\t\t\t\t>\n\t\t\t\t\t\t{/* TASK 3: Take a look at Dataset Information.md from MS1 and add other options to the selector here  */}\n\t\t\t\t\t\t<Option value=\"D1\">Bundesliga</Option>\n\t\t\t\t\t\t<Option value=\"SP1\">La Liga</Option>\n\t\t\t\t\t\t<Option value=\"F1\">Ligue 1</Option>\n\t\t\t\t\t\t<Option value=\"I1\">Serie A</Option>\n\t\t\t\t\t\t<Option value=\"E0\">Premier League</Option>\n\t\t\t\t\t</Select>\n\n\t\t\t\t\t<Table\n\t\t\t\t\t\tonRow={(record, rowIndex) => {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tonClick: (event) => {\n\t\t\t\t\t\t\t\t\tthis.goToMatch(record.MatchId);\n\t\t\t\t\t\t\t\t}, // clicking a row takes the user to a detailed view of the match in the /matches page using the MatchId parameter\n\t\t\t\t\t\t\t};\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdataSource={this.state.matchesResults}\n\t\t\t\t\t\tpagination={{\n\t\t\t\t\t\t\tpageSizeOptions: [5, 10],\n\t\t\t\t\t\t\tdefaultPageSize: 5,\n\t\t\t\t\t\t\tshowQuickJumper: true,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<ColumnGroup title=\"Teams\">\n\t\t\t\t\t\t\t{/* TASK 4: correct the title for the 'Home' column and add a similar column for 'Away' team in this ColumnGroup */}\n\t\t\t\t\t\t\t<Column\n\t\t\t\t\t\t\t\ttitle=\"Home\"\n\t\t\t\t\t\t\t\tdataIndex=\"Home\"\n\t\t\t\t\t\t\t\tkey=\"Home\"\n\t\t\t\t\t\t\t\tsorter={(a, b) => a.Home.localeCompare(b.Home)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Column\n\t\t\t\t\t\t\t\ttitle=\"Away\"\n\t\t\t\t\t\t\t\tdataIndex=\"Away\"\n\t\t\t\t\t\t\t\tkey=\"Away\"\n\t\t\t\t\t\t\t\tsorter={(a, b) => a.Away.localeCompare(b.Away)}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ColumnGroup>\n\t\t\t\t\t\t<ColumnGroup title=\"Goal\">\n\t\t\t\t\t\t\t{/* TASK 5: add columns for home and away goals in this ColumnGroup, with the ability to sort values in these columns numerically */}\n\t\t\t\t\t\t\t<Column\n\t\t\t\t\t\t\t\ttitle=\"Home Goals\"\n\t\t\t\t\t\t\t\tdataIndex=\"HomeGoals\"\n\t\t\t\t\t\t\t\tkey=\"HomeGoals\"\n\t\t\t\t\t\t\t\tsorter={(a, b) => a.HomeGoals - b.HomeGoals}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<Column\n\t\t\t\t\t\t\t\ttitle=\"Away Goals\"\n\t\t\t\t\t\t\t\tdataIndex=\"AwayGoals\"\n\t\t\t\t\t\t\t\tkey=\"AwayGoals\"\n\t\t\t\t\t\t\t\tsorter={(a, b) => a.AwayGoals - b.AwayGoals}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</ColumnGroup>\n\t\t\t\t\t\t{/* TASK 6: create two columns (independent - not in a column group) for the date and time. Do not add a sorting functionality */}\n\t\t\t\t\t\t<Column title=\"Date\" dataIndex=\"Date\" key=\"Date\" />\n\t\t\t\t\t\t<Column title=\"Time\" dataIndex=\"Time\" key=\"Time\" />\n\t\t\t\t\t</Table>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default HomePage;\n","import React from \"react\";\r\nimport {\r\n  Form,\r\n  FormInput,\r\n  FormGroup,\r\n  Button,\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Progress,\r\n} from \"shards-react\";\r\n\r\nimport {\r\n  Table,\r\n  Pagination,\r\n  Select,\r\n  Row,\r\n  Col,\r\n  Divider,\r\n  Slider,\r\n  Rate,\r\n} from \"antd\";\r\nimport { RadarChart } from \"react-vis\";\r\nimport { format } from \"d3-format\";\r\n\r\nimport MenuBar from \"../components/MenuBar\";\r\nimport { getPlayerSearch, getPlayer } from \"../fetcher\";\r\nconst wideFormat = format(\".3r\");\r\n\r\nclass PlayersPage extends React.Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1> Player </h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default PlayersPage;\r\n","import React from \"react\";\r\nimport {\r\n\tForm,\r\n\tFormInput,\r\n\tFormGroup,\r\n\tButton,\r\n\tCard,\r\n\tCardBody,\r\n\tCardTitle,\r\n\tProgress,\r\n} from \"shards-react\";\r\n\r\nimport { Table, Row, Col, Divider } from \"antd\";\r\n\r\nimport { getMatchSearch, getMatch } from \"../fetcher\";\r\n\r\nimport MenuBar from \"../components/MenuBar\";\r\n\r\nconst { Column, ColumnGroup } = Table;\r\n\r\nclass MatchesPage extends React.Component {\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<div>\r\n        <h1> Match </h1>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default MatchesPage;\r\n","import React from 'react';\n\nconst divStyle = {\n    color:'white'\n};\n\nclass About extends React.Component {\n    \n    render() {\n        return (\n            <div style={divStyle}>\n                <h2>About Page</h2>\n                <main>\n                    <p>This section contains information about...</p>\n                </main>\n            </div>\n        )\n    }\n}\n\n\n\nexport default About;\n","import React from \"react\";\nimport { Route, Switch, Link } from \"react-router-dom\";\nimport About from \"./About\";\nimport PlayerPage from \"./pages/PlayersPage.js\";\nimport Home from \"./pages/HomePage.js\";\n\nclass App extends React.Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Home />\n          </Route>\n          <Route exact path=\"/players\">\n            <PlayerPage />\n          </Route>\n        </Switch>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter, BrowserRouter, Route, Switch } from \"react-router-dom\";\n\nimport HomePage from \"./pages/HomePage\";\nimport PlayersPage from \"./pages/PlayersPage\";\nimport \"antd/dist/antd.css\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"shards-ui/dist/css/shards.min.css\";\nimport MatchesPage from \"./pages/MatchesPage\";\nimport App from \"./App.js\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}